{
    "swagger": "2.0",
    "info": {
        "title": "Auth Service API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates a user by their UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User credentials containing user_id",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated - returns access and refresh tokens",
                        "schema": {
                            "$ref": "#/definitions/api.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - missing or invalid user_id field",
                        "schema": {
                            "$ref": "#/definitions/api.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal server error - database or service failure",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logs out the user and revokes their access and refresh tokens. The session is marked as revoked and tokens are added to the revocation list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout user and revoke tokens",
                "responses": {
                    "204": {
                        "description": "No content - successfully logged out and tokens revoked"
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing access token",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - database or service failure",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refreshes the access token using a valid, co-issued token pair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Refresh token pair",
                "parameters": [
                    {
                        "description": "Refresh token request containing access and refresh tokens",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RefreshDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully refreshed token pair - returns new access and refresh tokens",
                        "schema": {
                            "$ref": "#/definitions/api.RefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error - missing tokens, invalid base64 encoding, or malformed request",
                        "schema": {
                            "$ref": "#/definitions/api.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Authentication error - expired tokens, revoked session, or invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - suspicious activity detected (different user agent)",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - database or service failure",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns information about the currently authenticated user based on the access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get current user information",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully - returns user_id",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid, expired, or revoked access token",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "description": "Standardized API error response",
            "type": "object",
            "properties": {
                "fields": {
                    "description": "@Description Array of field-specific validation errors (only present for validation errors)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.FieldError"
                    }
                },
                "message": {
                    "description": "@Description General error message describing the error\n@example validation error",
                    "type": "string"
                }
            }
        },
        "api.FieldError": {
            "description": "Field-specific validation error",
            "type": "object",
            "properties": {
                "field": {
                    "description": "@Description Name of the field with error\n@example user_id",
                    "type": "string"
                },
                "message": {
                    "description": "@Description Error message for the field\n@example required, but missing",
                    "type": "string"
                }
            }
        },
        "api.LoginDTO": {
            "description": "Login request payload",
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "description": "@Description\tUnique identifier for the user\n\t@example\t\t73c954ad-f723-48f4-a76c-d3c29c0cd135",
                    "type": "string"
                }
            }
        },
        "api.LoginResponse": {
            "description": "Login response",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "@Description\tJWT access token for authentication\n\t@example\t\teyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "@Description\tBase64 encoded refresh token\n\t@example\t\tdGVzdC1yZWZyZXNoLXRva2Vu",
                    "type": "string"
                }
            }
        },
        "api.RefreshDTO": {
            "description": "Refresh token request payload",
            "type": "object",
            "required": [
                "access_token",
                "refresh_token"
            ],
            "properties": {
                "access_token": {
                    "description": "@Description\tCurrent JWT access token\n\t@example\t\teyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "@Description\tBase64 encoded refresh token\n\t@example\t\tdGVzdC1yZWZyZXNoLXRva2Vu",
                    "type": "string"
                }
            }
        },
        "api.RefreshResponse": {
            "description": "Refresh token response",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "@Description\tNew JWT access token\n\t@example\t\teyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "@Description\tNew base64 encoded refresh token\n\t@example\t\tdGVzdC1yZWZyZXNoLXRva2Vu",
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "description": "User information response",
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "@Description\tUnique identifier of the authenticated user\n\t@example\t\t73c954ad-f723-48f4-a76c-d3c29c0cd135",
                    "type": "string"
                }
            }
        },
        "api.ValidationError": {
            "description": "Validation error response containing multiple field errors",
            "type": "object",
            "properties": {
                "fields": {
                    "description": "@Description Array of field validation errors",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.FieldError"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Format: Bearer \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}